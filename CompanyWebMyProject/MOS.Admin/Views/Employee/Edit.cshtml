@model CompanyWeb.Admin.Models.EmployeeViewModel
@using CompanyWeb.Admin.Resources.Employee
@{
    ViewBag.Title = EmployeeResource.Edit;
}

@using (Html.BeginForm("Edit", "Employee", FormMethod.Post, new { @class = "avatar-form", enctype = "multipart/form-data", autocomplete = "off" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>@EmployeeResource.EditEmployee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label(EmployeeResource.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label(EmployeeResource.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="AvatarUrl">@EmployeeResource.AvatarUrl</label>
            <div class="col-md-10">

                <input type="file" id="AvatarUrl" name="AvatarUrl" class="form-control" />

            </div>
        </div>
        <div class="form-group">
            @Html.Label( EmployeeResource.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label( EmployeeResource.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label( EmployeeResource.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label( EmployeeResource.EMail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label( EmployeeResource.MobilePhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MobilePhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MobilePhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="IsActive">@EmployeeResource.IsActive</label>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "col-md-1" } })
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="RowNumber">@EmployeeResource.RowNumber</label>
            <div class="col-md-10">
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RowNumber, new { htmlAttributes = new { @class = "col-md-1" } })
                    @Html.ValidationMessageFor(model => model.RowNumber, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink(EmployeeResource.BackToList, "Index", null, new { @class = "btn btn btn-primary" })
                <input type="submit" value="@EmployeeResource.Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}

@Scripts.Render("~/Content/ckeditor/ckeditor.js")

<script type="text/javascript">
    var editor = CKEDITOR.instances['Content'];
        if (editor) { editor.destroy(true); }
        CKEDITOR.replace('Content', {
            enterMode: CKEDITOR.ENTER_BR,
        });
</script>